@model IEnumerable<MyFavoriteThings.Models.Adventure>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div class="form-horizontal">

    <div class="col-md-3">

        @Html.ActionLink("Create a New Adventure", "Create")
    </div>
    <p></p>
    @*<div class="col-md-2">
        Click the "Mode" button to toggle modes:
    </div>*@
    <div class="col-md-2">
        <button onclick="toggleMode()">Toggle Mode</button>
    </div>
    <div class="col-md-2">
        <text id="AdventurerMode">Adventurer Mode</text>
        <text id="DetailMode" @(ViewBag.ShowDetail ? "":"hidden")>Detail Mode</text>
    </div>
    <div></div>
    <br />
    <p>.</p>
</div>


    <script>
        function toggleMode() {
            var adventure = document.getElementById("AdventurerMode");
            var detail = document.getElementById("DetailMode");
            var showDetail = false;
            if (adventure.style.display === "none") {   // is currently detail mode, changing to adventure
                showDetail = false;
            }
            else {
                showDetail = true;
            }

            // change the controls to reflect the new mode
            adventure.hidden = showDetail;
            adventure.style.display = (showDetail ? "none" : "block");  //= "block"; //= showDetail ? "none" : "block";
            detail.hidden = !showDetail;
            detail.style.display = (!showDetail ? "none" : "block");

            //    var hideShowControls = { 1:"obscure", 2:"detail" };

            //var obscureDetail;
            //for (obscureDetail in hideShowControls) {
            //    for (var i = 1; i < 4; i++) {
            //        var thisEl = document.getElementById(obscureDetail + i)
            //        // show or hide based on ?? ViewBag.ShowDetail
            //        thisEl.hidden = asdf;
            //        thisEl.style.display = "none/block";
            //    }
            //    // switch the boolean for the next list of controls

            ////id = "obscure1"
            ////id = "detail1"
            //}

            



        }
    </script>



    <table class="table">
        <tr>
            <th></th>
            <th>
                @*@Html.DisplayNameFor(model => model.Contributor.FirstName)*@
                Posted By
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.AdventureName)*@
                @*@Html.DisplayNameFor(model => model.AdventureName_Obscure)*@
                Adventure Name
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.AdventureDescription)*@
                @*@Html.DisplayNameFor(model => model.AdventureDescription_Obscure)*@
                Description
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.AdventureGeneralLocation)*@
                @*@Html.DisplayNameFor(model => model.AdventureGeneralLocation_Obscure)*@
                General Location
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.GeneralTimeNarrative)*@
                General Time
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Rating)*@
                Rating
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.RatingCounter)*@
                Ratings
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.RatingSum)
                </th>*@
            <th>
                @*@Html.DisplayNameFor(model => model.AllowComments)*@
                Allow Comments
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.AllowImages)*@
                Allow Images
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments)
            </th>
            @*<th></th>*@
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.AdventureID, showDetail = ViewBag.ShowDetail })
                    @if (ViewBag.ContributorID == item.ContributorID)
                    {
                        @Html.ActionLink(" | Edit", "Edit", new { id = item.AdventureID, showDetail = ViewBag.ShowDetail })
                        @Html.ActionLink(" | Delete", "Delete", new { id = item.AdventureID })
                    }
                    @Html.ActionLink("Follow This Poster", "Follow", new { id = item.ContributorID })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Contributor.FirstName)
                </td>
                @*@if (ViewBag.ShowDetail)
                {*@
                    <td id="detail1" @(ViewBag.ShowDetail ? "":"hidden")>
                        @Html.DisplayFor(modelItem => item.AdventureName)
                    </td>
                    <td id="detail2" @(ViewBag.ShowDetail ? "":"hidden")>
                        @Html.DisplayFor(modelItem => item.AdventureDescription)
                    </td>
                    <td id="detail3" @(ViewBag.ShowDetail ? "":"hidden")>
                        @Html.DisplayFor(modelItem => item.AdventureGeneralLocation)
                    </td>
                @*}
                @if (!ViewBag.ShowDetail)
                {*@
                    <td id="obscure1" @(ViewBag.ShowDetail ? "hidden":"")>
                        @Html.DisplayFor(modelItem => item.AdventureName_Obscure)
                    </td>
                    <td id="obscure2" @(ViewBag.ShowDetail ? "hidden":"")>
                        @Html.DisplayFor(modelItem => item.AdventureDescription_Obscure)
                    </td>
                    <td id="obscure3" @(ViewBag.ShowDetail ? "hidden":"")>
                        @Html.DisplayFor(modelItem => item.AdventureGeneralLocation_Obscure)
                    </td>
                @*}*@
                <td>
                    @Html.DisplayFor(modelItem => item.GeneralTimeNarrative)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RatingCounter)
                </td>
                @*<td>
                        @Html.HiddenFor(modelItem => item.RatingSum)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.AllowComments)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AllowImages)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comments)
                </td>
            </tr>
        }

    </table>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">

        <script src="https://cdn.apple-mapkit.com/mk/5.x.x/mapkit.js"></script>

        <style>
            #map {
                height: 600px;
            }

            a:link, a:visited {
                color: #2aaef5;
                outline: none;
                text-decoration: none;
            }

            .landmark {
                width: 250px;
                padding: 7px 0 0 0;
                background: rgba(247, 247, 247, 0.75);
                border-radius: 5px;
                box-shadow: 10px 10px 50px rgba(0, 0, 0, 0.29);
                font-family: Helvetica, Arial, sans-serif;
                -webkit-transform-origin: 0 10px;
                transform-origin: 0 10px;
            }

                .landmark h1 {
                    margin-top: 0;
                    padding: 5px 15px;
                    background: #2aaef5;
                    color: rgba(255, 255, 255, 0.9);
                    font-size: 16px;
                    font-weight: 300;
                }

                .landmark section {
                    padding: 0 15px 5px;
                    font-size: 14px;
                }

                    .landmark section p {
                        margin: 5px 0;
                    }

                .landmark:after {
                    content: "";
                    position: absolute;
                    top: 7px;
                    left: -13px;
                    width: 0;
                    height: 0;
                    margin-bottom: -13px;
                    border-right: 13px solid #2aaef5;
                    border-top: 13px solid rgba(0, 0, 0, 0);
                    border-bottom: 13px solid rgba(0, 0, 0, 0);
                }
            /*removed keyframes code here*/
        </style>
        <script>
            var mapPointsData = @Html.Raw(Json.Encode(@ViewBag.MapPointsData));
            var mapKitCode = @Html.Raw(Json.Encode(@ViewBag.MapKitCode));
        </script>

    </head>

    <body>
        <div id="map"></div>
        <script>
            mapkit.init({
                authorizationCallback: function (done) {
                    var xhr = new XMLHttpRequest();
                    xhr.open("GET", "/services/jwt");
                    xhr.addEventListener("load", function () {
                        //done(this.responseText);
                        done(mapKitCode);
                    });
                    xhr.send();
                }
            });

            var mapLandmarks = [];
            // Landmarks data
            for (i = 0; i < mapPointsData.length; i++) {
                mapLandmarks.push({ coordinate: new mapkit.Coordinate(mapPointsData[i].Lat, mapPointsData[i].Long), title: mapPointsData[i].AdventureName, balloonText: mapPointsData[i].MapPointNumber });
            }

            // Landmark annotation callout delegate
            var CALLOUT_OFFSET = new DOMPoint(-148, -78);
            var landmarkAnnotationCallout = {
                calloutElementForAnnotation: function (annotation) {
                    return calloutForLandmarkAnnotation(annotation);
                },

                calloutAnchorOffsetForAnnotation: function (annotation, element) {
                    return CALLOUT_OFFSET;
                },

                calloutAppearanceAnimationForAnnotation: function (annotation) {
                    return "scale-and-fadein .4s 0 1 normal cubic-bezier(0.4, 0, 0, 1.5)";
                }
            };

            // Landmarks annotations
            var annotations = mapLandmarks.map(function (landmark) {
                var annotation = new mapkit.MarkerAnnotation(landmark.coordinate, {
                    callout: landmarkAnnotationCallout,
                    color: "#c969e0"
                    //, glyphText : "1"
                    , glyphText: landmark.balloonText.toString() //.AdventureID.toString()
                });
                annotation.landmark = landmark;
                return annotation;
            });

            var map = new mapkit.Map("map");
            map.showItems(annotations);

            // Landmark annotation custom callout
            function calloutForLandmarkAnnotation(annotation) {
                //tried this here, didn't work
                //glyphText = annotation.landmark.AdventureID.toString()  ;

                var div = document.createElement("div");
                div.className = "landmark";

                var title = div.appendChild(document.createElement("h1"));
                title.textContent = annotation.landmark.title;

                //var section = div.appendChild(document.createElement("section"));

                //var phone = section.appendChild(document.createElement("p"));
                //phone.className = "phone";
                //phone.textContent = annotation.landmark.phone;

                //var link = section.appendChild(document.createElement("p"));
                //link.className = "homepage";
                //var a = link.appendChild(document.createElement("a"));
                //a.href = annotation.landmark.url;
                //a.textContent = "website";

                return div;
            }
        </script>
        @Html.ListBox("Categories", new MultiSelectList(ViewBag.Categories, "Value", "Text"), new { size = 10, multiple = "multiple" })
    </body>
</html>


