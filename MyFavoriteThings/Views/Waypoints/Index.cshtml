@model IEnumerable<MyFavoriteThings.Models.Waypoint>

@{
    ViewBag.Title = "Index";
}

<h2>Index - Waypoints for Adventure</h2>
<h4>
    @Html.TextBox("DateAtLocation", (string)ViewBag.DateForSunriseSunset)  
    Sunrise: @ViewBag.Sunrise, Sunset: @ViewBag.Sunset
    
    @Html.ActionLink("Calculate", "CalculateSunriseSunset", new { aID = ViewBag.AdventureID, dateString = @Html.DateAtLocation })
</h4>
<p>
    @if (ViewBag.UserIsCreator)
    {
        @Html.ActionLink("Create New Waypoint", "Create", new { id = ViewBag.AdventureID })
    }|
    @Html.ActionLink("Back to Adventure Detail", "Details", "Adventures", new { id = ViewBag.AdventureID }, null) |
    @Html.ActionLink("Back to Adventures", "Index", "Adventures", new { id = ViewBag.AdventureID }, null) |
    @*@Html.ActionLink("Back to List", "Index", new { id = ViewBag.AdventureID })*@
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Adventure.AdventureName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Sequence)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WaypointName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WaypointName_Obscure)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WaypointNickname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WaypointNickname_Obscure)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description_Obscure)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DirectionsNarrative)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DirectionsNarrative_Obscure)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Lat)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Long)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DayTimeOfDayNarrative)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Adventure.AdventureName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sequence)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WaypointName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WaypointName_Obscure)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WaypointNickname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WaypointNickname_Obscure)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description_Obscure)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DirectionsNarrative)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DirectionsNarrative_Obscure)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lat)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Long)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Street1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Street2)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DayTimeOfDayNarrative)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.WaypointID }) |
                @if (ViewBag.UserIsCreator)
                {
                    @Html.ActionLink(" | Edit", "Edit", new { id = item.WaypointID })
                    @Html.ActionLink(" | Delete", "Delete", new { id = item.WaypointID })
                }
                @*@Html.ActionLink("Edit", "Edit", new { id = item.WaypointID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.WaypointID })*@
            </td>
        </tr>
    }

</table>



<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">

    <script src="https://cdn.apple-mapkit.com/mk/5.x.x/mapkit.js"></script>

    <style>
        #map {
            width: 100%;
            height: 600px;
        }
    </style>

</head>

<body>
    <div id="map2"></div>

    <script>
        mapkit.init({
            authorizationCallback: function (done) {
                var xhr = new XMLHttpRequest();
                xhr.open("GET", "/services/jwt");
                xhr.addEventListener("load", function () {
                    //done(this.responseText);
                    done('eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjNEVzZNM1NCUjIifQ.eyJpc3MiOiJHNlUyOVg5QUg3IiwiaWF0IjoxNTUzOTc3NjIxLCJleHAiOjE1NTUxODcyMjF9.c3xpepTTLU8kY-kBdOEM3b9_I3u_X3gqaHNoIczUwiexBoBBTDfbGJi5Ne33LPCz9rEy0y50vDscUKbVILnI7A');
                });
                xhr.send();
            }
        });

        var GreaterMilwaukee = new mapkit.CoordinateRegion(
            new mapkit.Coordinate(43.0378, -88.1331),
            new mapkit.CoordinateSpan(0.167647972, 0.354985255)
        );
        var map = new mapkit.Map("map");
        map.region = GreaterMilwaukee;
            //var Cupertino = new mapkit.CoordinateRegion(
            //    new mapkit.Coordinate(37.3316850890998, -122.030067374026),
            //    new mapkit.CoordinateSpan(0.167647972, 0.354985255)
            //);
            //var map = new mapkit.Map("map");
            //map.region = Cupertino;

    </script>
</body>
</html>
